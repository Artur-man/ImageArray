Checking for deprecated package usage... OK
Checking for remote package usage...
Package dependencies must be on CRAN or Bioconductor. Remove 'Remotes:' from DESCRIPTION
Checking for 'LazyData: true' usage... OK
Checking version number... OK
Checking version number validity... OK
Checking R version dependency... OK
Checking package size... OK
Checking individual file sizes... OK
Checking biocViews... OK
Checking that biocViews are present... OK
Checking package type based on biocViews... OK
Checking for non-trivial biocViews... OK
Checking that biocViews come from the same category... OK
Checking biocViews validity... OK
Checking for recommended biocViews... OK
Checking build system compatibility... OK
Checking for proper Description: field... OK
Checking if DESCRIPTION is well formatted... OK
Checking for whitespace in DESCRIPTION field names... OK
Checking that Package field matches directory/tarball name... OK
Checking for Version: field... OK
Checking for valid maintainer... OK
Checking License: for restrictive use... OK
Checking for recommended DESCRIPTION fields... OK
Checking for Bioconductor software dependencies... OK
Checking for pinned package versions in DESCRIPTION... OK
Checking .Rbuildignore... OK
Checking for stray BiocCheck output folders...
Remove 'ImageArray.BiocCheck' from the package directory
Checking for inst/doc folders... OK
Checking vignette directory... OK
Checking package installation calls in R code... OK
Checking for library/require of ImageArray... OK
Checking coding practice... OK
Checking parsed R code in R directory, examples, vignettes... OK
Checking function lengths...
The recommended function length is 50 lines or less. There is 1 function greater than 50 lines.
The longest 5 functions are:
writeImgArray() (R/ImgArray.R): 74 lines
Checking man page documentation...
Empty or missing \value sections found in man page(s).
Found in files:
man/aperm-ImgArray-method.Rd
man/as.raster-ImgArray-method.Rd
man/createImgArray.Rd
man/crop-ImgArray-method.Rd
man/crop.Rd
man/dim-ImgArray-method.Rd
man/flip-ImgArray-method.Rd
man/flip.Rd
man/flop-ImgArray-method.Rd
man/flop.Rd
man/getImageInfo.Rd
man/ImgArray-methods.Rd
man/length-ImgArray-method.Rd
man/negate-ImgArray-method.Rd
man/negate.Rd
man/path-ImgArray-method.Rd
man/path-set-ImgArray-method.Rd
man/realize-ImgArray-method.Rd
man/rotate-ImgArray-method.Rd
man/rotate.Rd
man/writeImgArray.Rd
At least 80% of man pages documenting exported objects must have runnable examples.
The following pages do not:
createImgArray.Rd
crop.Rd
flip.Rd
flop.Rd
getImageInfo.Rd
negate.Rd
rotate.Rd
writeImgArray.Rd
Checking package NEWS...
Consider adding a NEWS file, so your package news will be included in Bioconductor release announcements.
Checking unit tests... OK
Checking skip_on_bioc() in tests... OK
Checking formatting of DESCRIPTION, NAMESPACE, man pages, R source, and vignette source...
Consider shorter lines; 25 lines (4%) are > 80 characters long.
First few lines:
R/conversion.R#L10 setMethod("realize", signature = "ImgArr ...
R/conversion.R#L72     grDevices::rgb(t(x[, , 1L]), t(x[, , ...
R/conversion.R#L74       grDevices::rgb(t(x[, , 1L]), t(x[, ...
R/conversion.R#L76       grDevices::rgb(t(x[, , 1L]), t(x[, ...
R/conversion.R#L89 setMethod("as.raster", signature = "ImgA ...
R/conversion.R#L90   x <- realize(x, max.pixel.size = max.p ...
R/ImgArray.R#L31 #'    Here \code{i} is the level of the  ...
R/ImgArray.R#L91 #' @importFrom magick image_read image_i ...
R/ImgArray.R#L118     # how many series of power of 2 requ ...
R/ImgArray.R#L126     cat(paste0("Creating Series ", 1, "  ...
R/ImgArray.R#L134         cat(paste0("Creating Series ", i ...
R/ImgArray.R#L136                                          ...
R/ImgArray.R#L170                             format = c(" ...
R/ImgArray.R#L184   ondisk_path <- paste0(output, ifelse(f ...
R/ImgArray.R#L220              image_list[[i]] <- HDF5Arra ...
R/ImgArray.R#L221                                          ...
R/ImgArray.R#L223                                          ...
R/ImgArray.R#L224                                          ...
R/ImgArray.R#L227              image_list[[i]] <- ZarrArra ...
R/ImgArray.R#L228                                          ...
R/ImgArray.R#L230                                          ...
R/ImgArray.R#L231                                          ...
R/manipulation.R#L121                 seq(floor(utils::head(cu ...
vignettes/ImgArray.Rmd#L26 ImageArray is a package for Pyramidal an ...
vignettes/ImgArray.Rmd#L30 The main usage of the ImageArray is to d ...
Consider multiples of 4 spaces for line indents; 190 lines (28%) are not.
First few lines:
R/allgenerics.R#L6   UseMethod(generic = 'crop', object = o ...
R/conversion.R#L11    ...
R/conversion.R#L12   # get parameter ...
R/conversion.R#L13   if(!is.null(max.pixel.size) && !is.nul ...
R/conversion.R#L15   } ...
R/conversion.R#L16    ...
R/conversion.R#L17   if(is.null(max.pixel.size) && is.null( ...
R/conversion.R#L19   } else if(!is.null(max.pixel.size)){ ...
R/conversion.R#L21       n.series <- length(x) ...
R/conversion.R#L22       for(i in seq_len(n.series)){ ...
R/conversion.R#L25           return(S4Arrays::as.array.Arra ...
R/conversion.R#L27       } ...
R/conversion.R#L29       stop("'max.pixel.size' should be a ...
R/conversion.R#L31   } else if(!is.null(min.pixel.size)){ ...
R/conversion.R#L33       n.series <- length(x) ...
R/conversion.R#L34       if(n.series > 1){ ...
R/conversion.R#L36           dim_img <- dim(x[[i]]) ...
R/conversion.R#L37           if(min.pixel.size > max(dim_im ...
R/conversion.R#L39           } ...
R/conversion.R#L43       } else { ...
R/conversion.R#L45       } ...
R/conversion.R#L47       stop("'max.pixel.size' should be a ...
R/conversion.R#L49   } ...
R/conversion.R#L62   if (!is.numeric(x)) { ...
R/conversion.R#L64       storage.mode(x) <- "integer" ...
R/conversion.R#L65       max <- 255L ...
R/conversion.R#L68   } ...
R/conversion.R#L69   if (length(d <- dim(x)) != 3L)  ...
R/conversion.R#L71   r <- array(if (d[3L] == 3L)  ...
R/conversion.R#L74       grDevices::rgb(t(x[, , 1L]), t(x[, ...
R/conversion.R#L76       grDevices::rgb(t(x[, , 1L]), t(x[, ...
R/conversion.R#L79   class(r) <- "raster" ...
R/conversion.R#L80   r ...
R/conversion.R#L90   x <- realize(x, max.pixel.size = max.p ...
R/conversion.R#L91   x <- .as_raster_array(aperm(x, perm =  ...
R/conversion.R#L92   x ...
R/image.R#L8   dim_image <- dim(object[[1]]) ...
R/image.R#L9   imginfo <- list(width = dim_image[2],  ...
R/image.R#L10   as.data.frame(imginfo) ...
R/ImgArray.R#L13   Class="ImgArray", ...
R/ImgArray.R#L14   slots=c( ...
R/ImgArray.R#L16   ) ...
R/ImgArray.R#L47   f = '[[', ...
R/ImgArray.R#L48   signature = c('ImgArray', "numeric"), ...
R/ImgArray.R#L49   definition = function(x, i){ ...
R/ImgArray.R#L51   } ...
R/ImgArray.R#L59   f = '[[<-', ...
R/ImgArray.R#L60   signature = c('ImgArray', "numeric"), ...
R/ImgArray.R#L61   definition = function(x, i, ..., value ...
R/ImgArray.R#L64   } ...
R/ImgArray.R#L70   f = 'show', ...
R/ImgArray.R#L71   signature = c('ImgArray'), ...
R/ImgArray.R#L72   definition = function(object){ ...
R/ImgArray.R#L76       dim_image <- dim(object@series[[i] ...
R/ImgArray.R#L77       dim_image <- paste(dim_image, coll ...
R/ImgArray.R#L78       cat(paste0("Series ", i, " of size ...
R/ImgArray.R#L80   } ...
R/ImgArray.R#L98   # convert images ...
R/ImgArray.R#L99   if(is.integer(image)){ ...
R/ImgArray.R#L101   } ...
R/ImgArray.R#L102   if(!inherits(image, "magick-image")){ ...
R/ImgArray.R#L104   } ...
R/ImgArray.R#L105    ...
R/ImgArray.R#L106   # get image info ...
R/ImgArray.R#L107   image_info <- magick::image_info(image ...
R/ImgArray.R#L108   dim_image <- c(image_info$width, image ...
R/ImgArray.R#L109    ...
R/ImgArray.R#L110   # series ...
R/ImgArray.R#L111   if(is.null(n.series)){ ...
R/ImgArray.R#L120   } else if(n.series < 1){ ...
R/ImgArray.R#L122   } ...
R/ImgArray.R#L123    ...
R/ImgArray.R#L124   # create image series ...
R/ImgArray.R#L125   if(verbose) ...
R/ImgArray.R#L127   image_data <- magick::image_data(image ...
R/ImgArray.R#L128   image_list <- list(DelayedArray::Delay ...
R/ImgArray.R#L129   if(n.series > 1){ ...
R/ImgArray.R#L132       dim_image <- ceiling(dim_image/2) ...
R/ImgArray.R#L133       if(verbose) ...
R/ImgArray.R#L135       cur_image <- magick::image_resize( ...
R/ImgArray.R#L138       image_data <- magick::image_data(c ...
R/ImgArray.R#L139       image_list[[i]] <- DelayedArray::D ...
R/ImgArray.R#L141   } ...
R/ImgArray.R#L142    ...
R/ImgArray.R#L143   # return ...
R/ImgArray.R#L144   methods::new("ImgArray", series = imag ...
R/ImgArray.R#L178   # check arguements ...
R/ImgArray.R#L179   if (!(is.logical(as.sparse) && length( ...
R/ImgArray.R#L181   verbose <- DelayedArray:::normarg_verb ...
R/ImgArray.R#L182    ...
R/ImgArray.R#L183   # path ...
R/ImgArray.R#L184   ondisk_path <- paste0(output, ifelse(f ...
R/ImgArray.R#L185    ...
R/ImgArray.R#L186   # create or replace output folder ...
R/ImgArray.R#L187   if (!.isTRUEorFALSE(replace))  ...
R/ImgArray.R#L189   if(replace){ ...
R/ImgArray.R#L191       file.remove(ondisk_path)  ...
R/ImgArray.R#L192   } ...
R/ImgArray.R#L193    ...
R/ImgArray.R#L194   # make Image Array ...
R/ImgArray.R#L195   if(!inherits(image, "ImgArray")){ ...
R/ImgArray.R#L197   } else { ...
R/ImgArray.R#L199   } ...
R/ImgArray.R#L201   # open ondisk store ...
R/ImgArray.R#L202   switch(format, ...
R/ImgArray.R#L203          HDF5ImgArray = { ...
R/ImgArray.R#L204            if(!file.exists(ondisk_path)) ...
R/ImgArray.R#L206            rhdf5::h5createGroup(ondisk_p ...
R/ImgArray.R#L207          },  ...
R/ImgArray.R#L208          ZarrImgArray = { ...
R/ImgArray.R#L209            zarr.array <- pizzarr::zarr_o ...
R/ImgArray.R#L210            zarr.array$create_group(name) ...
R/ImgArray.R#L211          }) ...
R/ImgArray.R#L212    ...
R/ImgArray.R#L213   # write all series ...
R/ImgArray.R#L214   for(i in seq_len(length(image_list))){ ...
R/ImgArray.R#L219            HDF5ImgArray = { ...
R/ImgArray.R#L220              image_list[[i]] <- HDF5Arra ...
R/ImgArray.R#L221                                          ...
R/ImgArray.R#L222                                          ...
R/ImgArray.R#L223                                          ...
R/ImgArray.R#L224                                          ...
R/ImgArray.R#L225            },  ...
R/ImgArray.R#L226            ZarrImgArray = { ...
R/ImgArray.R#L227              image_list[[i]] <- ZarrArra ...
R/ImgArray.R#L228                                          ...
R/ImgArray.R#L229                                          ...
R/ImgArray.R#L230                                          ...
R/ImgArray.R#L231                                          ...
R/ImgArray.R#L232            },  ...
R/ImgArray.R#L233            InMemoryImgArray = { ...
R/ImgArray.R#L234              image_list[[i]] <- img ...
R/ImgArray.R#L235            }) ...
R/ImgArray.R#L236   } ...
R/ImgArray.R#L237    ...
R/ImgArray.R#L238   # return ...
R/ImgArray.R#L239   return(image_list) ...
R/manipulation.R#L9           signature = "ImgArray", ...
R/manipulation.R#L10           function(object, degrees){ ...
R/manipulation.R#L14               stop("Only rotations of 0, ...
R/manipulation.R#L19               object <- aperm(object, pe ...
R/manipulation.R#L24               object <- flop(object) ...
R/manipulation.R#L29               object <- flip(object) ...
R/manipulation.R#L34           }) ...
R/manipulation.R#L44           signature = "ImgArray", ...
R/manipulation.R#L45           function(a, perm){ ...
R/manipulation.R#L48               a[[i]] <- aperm(a[[i]], pe ...
R/manipulation.R#L51           }) ...
R/manipulation.R#L58           signature = "ImgArray", ...
R/manipulation.R#L59           function(object){ ...
R/manipulation.R#L63               object[[i]] <- 255 - objec ...
R/manipulation.R#L66           }) ...
R/manipulation.R#L73           signature = "ImgArray", ...
R/manipulation.R#L74           function(object){ ...
R/manipulation.R#L77               img <- object[[i]] ...
R/manipulation.R#L78               dim_img <- dim(img) ...
R/manipulation.R#L79               object[[i]] <- img[ , , di ...
R/manipulation.R#L82           }) ...
R/manipulation.R#L89           signature = "ImgArray", ...
R/manipulation.R#L90           function(object){ ...
R/manipulation.R#L93               img <- object[[i]] ...
R/manipulation.R#L94               dim_img <- dim(img) ...
R/manipulation.R#L95               object[[i]] <- img[ , dim_ ...
R/manipulation.R#L98           }) ...
R/manipulation.R#L107           signature = "ImgArray", ...
R/manipulation.R#L108           function(object, ind){ ...
R/manipulation.R#L112               stop("'ind' should be a li ...
R/manipulation.R#L114               stop("'ind' should be a li ...
R/manipulation.R#L119               img <- object[[i]] ...
R/manipulation.R#L120               cur_ind <- lapply(ind, fun ...
R/manipulation.R#L122               }) ...
R/manipulation.R#L123               object[[i]] <- img[, cur_i ...
R/manipulation.R#L127           }) ...
R/utils.R#L19           signature = "ImgArray", ...
R/utils.R#L20           function(object){ ...
R/utils.R#L22           } ...
R/utils.R#L31                  signature = "ImgArray", ...
R/utils.R#L32                  function(object, value) ...
R/utils.R#L33                    n.series <- length(ob ...
R/utils.R#L34                    for(i in seq_len(n.se ...
R/utils.R#L35                      object[[i]]@seed@fi ...
R/utils.R#L36                    } ...
R/utils.R#L37                    return(object) ...
R/utils.R#L38                  } ...
R/utils.R#L42   is.logical(x) && length(x) == 1L && !i ...
R/utils.R#L46   is.character(x) && length(x) == 1L &&  ...
vignettes/ImgArray.Rmd#L36              dim=c(3, 2000, 5000)) ...
vignettes/ImgArray.Rmd#L44                           format = "HDF5 ...
vignettes/ImgArray.Rmd#L45                           output = outpu ...
vignettes/ImgArray.Rmd#L46                           replace = TRUE ...
Checking if package already exists in CRAN... OK
Checking for bioc-devel mailing list subscription...
Cannot determine whether maintainer is subscribed to the Bioc-Devel mailing list (requires admin credentials). Subscribe here: https://stat.ethz.ch/mailman/listinfo/bioc-devel
Checking for support site registration...
Unable to find your email in the Support Site:
  HTTP 404 Not Found.
